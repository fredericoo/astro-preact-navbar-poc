import type { FunctionComponent } from "preact";
import { useEffect, useState } from "preact/hooks";
import s from "./Menu.module.scss";

type AppLauncherMenuProps = {};

const AppLauncherMenu: FunctionComponent<AppLauncherMenuProps> = () => {
  const [data, setData] = useState<{ id: string; username: string }[]>([]);
  const [isOpen, setIsOpen] = useState(false);

  useEffect(() => {
    const getData = async () => {
      const data = await fetch(
        "https://jsonplaceholder.typicode.com/users"
      ).then((res) => res.json());
      setData(data);
    };

    getData();
  }, []);

  return (
    <div className={s.wrapper}>
      <button className={s.button} onClick={() => setIsOpen(!isOpen)}>
        <svg
          width="32"
          height="32"
          viewBox="0 0 32 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16 11C16.3956 11 16.7822 10.8827 17.1111 10.6629C17.44 10.4432 17.6964 10.1308 17.8478 9.76537C17.9991 9.39992 18.0387 8.99778 17.9616 8.60982C17.8844 8.22186 17.6939 7.86549 17.4142 7.58579C17.1345 7.30608 16.7781 7.1156 16.3902 7.03843C16.0022 6.96126 15.6001 7.00087 15.2346 7.15224C14.8692 7.30362 14.5568 7.55996 14.3371 7.88886C14.1173 8.21776 14 8.60444 14 9C14 9.53043 14.2107 10.0391 14.5858 10.4142C14.9609 10.7893 15.4696 11 16 11ZM16 21C15.6044 21 15.2178 21.1173 14.8889 21.3371C14.56 21.5568 14.3036 21.8692 14.1522 22.2346C14.0009 22.6001 13.9613 23.0022 14.0384 23.3902C14.1156 23.7781 14.3061 24.1345 14.5858 24.4142C14.8655 24.6939 15.2219 24.8844 15.6098 24.9616C15.9978 25.0387 16.3999 24.9991 16.7654 24.8478C17.1308 24.6964 17.4432 24.44 17.6629 24.1111C17.8827 23.7822 18 23.3956 18 23C18 22.4696 17.7893 21.9609 17.4142 21.5858C17.0391 21.2107 16.5304 21 16 21ZM16 14C15.6044 14 15.2178 14.1173 14.8889 14.3371C14.56 14.5568 14.3036 14.8692 14.1522 15.2346C14.0009 15.6001 13.9613 16.0022 14.0384 16.3902C14.1156 16.7781 14.3061 17.1345 14.5858 17.4142C14.8655 17.6939 15.2219 17.8844 15.6098 17.9616C15.9978 18.0387 16.3999 17.9991 16.7654 17.8478C17.1308 17.6964 17.4432 17.44 17.6629 17.1111C17.8827 16.7822 18 16.3956 18 16C18 15.4696 17.7893 14.9609 17.4142 14.5858C17.0391 14.2107 16.5304 14 16 14Z"
            fill="#424242"
          />
          <path
            d="M9 11C9.39556 11 9.78224 10.8827 10.1111 10.6629C10.44 10.4432 10.6964 10.1308 10.8478 9.76537C10.9991 9.39992 11.0387 8.99778 10.9616 8.60982C10.8844 8.22186 10.6939 7.86549 10.4142 7.58579C10.1345 7.30608 9.77814 7.1156 9.39018 7.03843C9.00222 6.96126 8.60009 7.00087 8.23463 7.15224C7.86918 7.30362 7.55682 7.55996 7.33706 7.88886C7.1173 8.21776 7 8.60444 7 9C7 9.53043 7.21072 10.0391 7.58579 10.4142C7.96086 10.7893 8.46957 11 9 11ZM9 21C8.60444 21 8.21776 21.1173 7.88886 21.3371C7.55996 21.5568 7.30362 21.8692 7.15224 22.2346C7.00087 22.6001 6.96126 23.0022 7.03843 23.3902C7.1156 23.7781 7.30608 24.1345 7.58579 24.4142C7.86549 24.6939 8.22186 24.8844 8.60982 24.9616C8.99778 25.0387 9.39992 24.9991 9.76537 24.8478C10.1308 24.6964 10.4432 24.44 10.6629 24.1111C10.8827 23.7822 11 23.3956 11 23C11 22.4696 10.7893 21.9609 10.4142 21.5858C10.0391 21.2107 9.53043 21 9 21ZM9 14C8.60444 14 8.21776 14.1173 7.88886 14.3371C7.55996 14.5568 7.30362 14.8692 7.15224 15.2346C7.00087 15.6001 6.96126 16.0022 7.03843 16.3902C7.1156 16.7781 7.30608 17.1345 7.58579 17.4142C7.86549 17.6939 8.22186 17.8844 8.60982 17.9616C8.99778 18.0387 9.39992 17.9991 9.76537 17.8478C10.1308 17.6964 10.4432 17.44 10.6629 17.1111C10.8827 16.7822 11 16.3956 11 16C11 15.4696 10.7893 14.9609 10.4142 14.5858C10.0391 14.2107 9.53043 14 9 14Z"
            fill="#424242"
          />
          <path
            d="M23 11C23.3956 11 23.7822 10.8827 24.1111 10.6629C24.44 10.4432 24.6964 10.1308 24.8478 9.76537C24.9991 9.39992 25.0387 8.99778 24.9616 8.60982C24.8844 8.22186 24.6939 7.86549 24.4142 7.58579C24.1345 7.30608 23.7781 7.1156 23.3902 7.03843C23.0022 6.96126 22.6001 7.00087 22.2346 7.15224C21.8692 7.30362 21.5568 7.55996 21.3371 7.88886C21.1173 8.21776 21 8.60444 21 9C21 9.53043 21.2107 10.0391 21.5858 10.4142C21.9609 10.7893 22.4696 11 23 11ZM23 21C22.6044 21 22.2178 21.1173 21.8889 21.3371C21.56 21.5568 21.3036 21.8692 21.1522 22.2346C21.0009 22.6001 20.9613 23.0022 21.0384 23.3902C21.1156 23.7781 21.3061 24.1345 21.5858 24.4142C21.8655 24.6939 22.2219 24.8844 22.6098 24.9616C22.9978 25.0387 23.3999 24.9991 23.7654 24.8478C24.1308 24.6964 24.4432 24.44 24.6629 24.1111C24.8827 23.7822 25 23.3956 25 23C25 22.4696 24.7893 21.9609 24.4142 21.5858C24.0391 21.2107 23.5304 21 23 21ZM23 14C22.6044 14 22.2178 14.1173 21.8889 14.3371C21.56 14.5568 21.3036 14.8692 21.1522 15.2346C21.0009 15.6001 20.9613 16.0022 21.0384 16.3902C21.1156 16.7781 21.3061 17.1345 21.5858 17.4142C21.8655 17.6939 22.2219 17.8844 22.6098 17.9616C22.9978 18.0387 23.3999 17.9991 23.7654 17.8478C24.1308 17.6964 24.4432 17.44 24.6629 17.1111C24.8827 16.7822 25 16.3956 25 16C25 15.4696 24.7893 14.9609 24.4142 14.5858C24.0391 14.2107 23.5304 14 23 14Z"
            fill="#424242"
          />
        </svg>
      </button>
      <div className={`${s.menu} ${isOpen ? s.isOpen : ""}`}>
        <ul>
          {data?.map((item) => (
            <li key={item.id}>{item.username}</li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default AppLauncherMenu;
